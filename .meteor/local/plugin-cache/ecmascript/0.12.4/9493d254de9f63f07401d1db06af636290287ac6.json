{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/user/testHRMS-master/imports/shiftMgmt/shiftRoster/shiftAllotment/api/empMaster.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"imports/shiftMgmt/shiftRoster/shiftAllotment/api/empMaster.js","filename":"/home/user/testHRMS-master/imports/shiftMgmt/shiftRoster/shiftAllotment/api/empMaster.js","passPerPreset":false,"envName":"development","cwd":"/home/user/testHRMS-master","root":"/home/user/testHRMS-master","plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/home/user/testHRMS-master/imports/shiftMgmt/shiftRoster/shiftAllotment/api/empMaster.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/shiftMgmt/shiftRoster/shiftAllotment/api/empMaster.js"}},"code":"module.export({\n  EmpMaster: function () {\n    return EmpMaster;\n  }\n});\nvar Mongo;\nmodule.link(\"meteor/mongo\", {\n  Mongo: function (v) {\n    Mongo = v;\n  }\n}, 0);\nvar EmpMaster = new Mongo.Collection('empMaster');\n\nif (Meteor.isServer) {\n  Meteor.publish(\"empData\", function (empid) {\n    var empprof = EmpMaster.find({\n      \"_id\": empid\n    });\n    return empprof;\n  });\n  Meteor.publish(\"allEmpData\", function () {\n    var allEmp = EmpMaster.find({});\n    return allEmp;\n  });\n}\n\nMeteor.methods({\n  \"insertBasicInfo\": function (formValues) {\n    console.log(formValues);\n    var emp_id = EmpMaster.insert({\n      \"shiftName\": formValues.shiftName,\n      \"startTime\": formValues.startTime,\n      \"startTimeAmPm\": formValues.startTimeAmPm,\n      \"endTime\": formValues.endTime,\n      \"endTimeAmPm\": formValues.endTimeAmPm,\n      \"effectiveFrom\": formValues.effectiveFrom,\n      \"tillDate\": formValues.tillDate\n    }, function (error, result) {\n      if (error) {\n        console.log(error);\n        return;\n      } else {\n        console.log(result);\n        return;\n      }\n    });\n    return emp_id;\n  },\n  \"updateBasicInfo\": function (formValues) {\n    console.log(formValues);\n    var emp_id = EmpMaster.update({\n      \"_id\": formValues._id\n    }, {\n      $set: {\n        \"shiftName\": formValues.shiftName,\n        \"startTime\": formValues.startTime,\n        \"startTimeAmPm\": formValues.startTimeAmPm,\n        \"endTime\": formValues.endTime,\n        \"endTimeAmPm\": formValues.endTimeAmPm,\n        \"effectiveFrom\": formValues.effectiveFrom,\n        \"tillDate\": formValues.tillDate\n      }\n    }, function (error, result) {\n      if (error) {\n        console.log(error);\n        return;\n      } else {\n        console.log(result);\n        return;\n      }\n    });\n    return emp_id;\n  },\n  \"deleteAllotedShift\": function (empid) {\n    EmpMaster.remove({\n      \"_id\": empid\n    }, function (error, result) {\n      if (error) {\n        return error;\n        console.log(error);\n      } else {\n        return result;\n      }\n    });\n    return;\n  }\n});","map":{"version":3,"sources":["imports/shiftMgmt/shiftRoster/shiftAllotment/api/empMaster.js"],"names":["module","export","EmpMaster","Mongo","link","v","Collection","Meteor","isServer","publish","empid","empprof","find","allEmp","methods","formValues","console","log","emp_id","insert","shiftName","startTime","startTimeAmPm","endTime","endTimeAmPm","effectiveFrom","tillDate","error","result","update","_id","$set","remove"],"mappings":"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","sourcesContent":["import { Mongo } from 'meteor/mongo';\n\nexport const EmpMaster = new Mongo.Collection('empMaster');\n\nif(Meteor.isServer){\n\tMeteor.publish(\"empData\",function(empid){\n\t\tvar empprof = EmpMaster.find({\"_id\":empid});\n\t\treturn empprof;\n\t});\n\n\tMeteor.publish(\"allEmpData\",function(){\n\t\tvar allEmp = EmpMaster.find({});\n\t\treturn allEmp;\n\t});\n}\n\nMeteor.methods({\n\t\"insertBasicInfo\" : function(formValues){\n\t\tconsole.log(formValues);\n\n\t\tvar emp_id = EmpMaster.insert({\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\"shiftName\" \t\t: formValues.shiftName,\t        \n\t\t\t\t\t\t\t        \"startTime\" \t\t: formValues.startTime,\t        \n\t\t\t\t\t\t\t        \"startTimeAmPm\" \t: formValues.startTimeAmPm,\t        \n\t\t\t\t\t\t\t        \"endTime\" \t\t\t: formValues.endTime,\t        \n\t\t\t\t\t\t\t        \"endTimeAmPm\" \t\t: formValues.endTimeAmPm,\t        \n\t\t\t\t\t\t\t        \"effectiveFrom\" \t: formValues.effectiveFrom,\t   \n\t\t\t\t\t\t\t        \"tillDate\" \t\t\t: formValues.tillDate,\t\t\t\t\t\n\t\t\t\t\t\t\t\t}, \n\t\t\t\t\t\t\t\t(error,result)=>{\n\t\t\t\t\t\t\t\t\tif(error){\n\t\t\t\t\t\t\t\t\t\tconsole.log(error);\n\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\t\t\tconsole.log(result);\n\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t);\n\n\t\treturn emp_id;\n\t},\t\n\n\t\"updateBasicInfo\" : function(formValues){\n\t\tconsole.log(formValues);\n\n\t\tvar emp_id = EmpMaster.update(\n\t\t\t\t\t\t\t\t{\"_id\": formValues._id},\n\t\t\t\t\t\t\t\t{$set : {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"shiftName\" \t\t: formValues.shiftName,\t        \n\t\t\t\t\t\t\t\t\t\t\t        \"startTime\" \t\t: formValues.startTime,\t        \n\t\t\t\t\t\t\t\t\t\t\t        \"startTimeAmPm\" \t: formValues.startTimeAmPm,\t        \n\t\t\t\t\t\t\t\t\t\t\t        \"endTime\" \t\t\t: formValues.endTime,\t        \n\t\t\t\t\t\t\t\t\t\t\t        \"endTimeAmPm\" \t\t: formValues.endTimeAmPm,\t        \n\t\t\t\t\t\t\t\t\t\t\t        \"effectiveFrom\" \t: formValues.effectiveFrom,\t   \n\t\t\t\t\t\t\t\t\t\t\t        \"tillDate\" \t\t\t: formValues.tillDate,\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t(error,result)=>{\n\t\t\t\t\t\t\t\t\tif(error){\n\t\t\t\t\t\t\t\t\t\tconsole.log(error);\n\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\t\t\tconsole.log(result);\n\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t);\n\n\t\treturn emp_id;\n\t},\n\n\t\"deleteAllotedShift\" : function(empid){\n\t\tEmpMaster.remove({\"_id\":empid}, (error,result)=>{\n\t\t\t\tif(error){\n\t\t\t\t\treturn error;\n\t\t\t\t\tconsole.log(error);\n\t\t\t\t}else{\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t});\n\n\t\treturn;\n\t}\n\n});"]},"sourceType":"script","hash":"9493d254de9f63f07401d1db06af636290287ac6"}
